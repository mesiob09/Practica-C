#include <stdio.h>
#include <stdlib.h>
#include <locale.h>
#include <ctype.h>
#include <string.h>
#include <time.h>


typedef struct Fecha
{
    int dia;
    int mes;
    int anno;

}tRegFecha;

typedef struct Direccion
{
    char calle[40];
    char ciudad[30];
    int numero;

}tRegDireccion;

typedef struct auxSocio
{
    char dni[20];
    char nombre[40];
    tRegFecha nacimiento;
    tRegDireccion direccion;
    int telefono;
    int contadorSocios;

} tRegAuxSocio;

typedef struct Socio
{
    tRegAuxSocio auxSocio[50];
    int contadorSocios;

} tRegSocio;

typedef struct Peliculas
{
    char clave[4];
    char titulo[20];
    char director[30];
    char estreno[40];

} tRegPelicula;




//Menu
void gestionSocios(tRegSocio socios[],FILE *fichNuevoSoc,FILE *fichSocios,FILE *fichImporSocios,int *contadorSocios);
void gestionPeliculas();

void Pausa();

//GESTION SOCIO
void altaSocio(tRegAuxSocio socios,int *contadorSocios,FILE *fichNuevoSoc,FILE *fichSocios);




int main()
{
    tRegAuxSocio auxSocio;
    tRegSocio socios[50];
    tRegPelicula peliculas[200];
    int contadorSocios;
    int opcion;

    FILE *fichSocios;
    FILE *fichNuevoSoc;

    FILE *fichImporSocios;

    fichNuevoSoc=fopen("nuevoSoc.txt","a+"); //porque ya lo tengo creado
    if(fichNuevoSoc == NULL){
        printf("\nERROR: Imposible crear el fichero  \n");
        exit(EXIT_FAILURE);
    }
    fflush(fichNuevoSoc);
    fclose(fichNuevoSoc);

    fichImporSocios=fopen("Socios.txt","r");
    if(fichImporSocios==NULL){
        printf("\nERROR: Imposible crear el fichero  \n");
        exit(EXIT_FAILURE);
    }
    fflush(fichNuevoSoc);
    fclose(fichNuevoSoc);


    fichSocios=fopen("nuevoSoc.dat","rb");
    if(fichSocios == NULL){
        printf("\nERROR: Imposible crear el fichero  \n");
        exit(EXIT_FAILURE);
    }
    fread(&socios,sizeof(tRegAuxSocio),1,fichSocios);
    fclose(fichSocios);
    contadorSocios=auxSocio.contadorSocios;


    do
    {

        printf("\n\t\t MENU PRINCIPAL");
        printf("\n\n\t1.-Gestion de Socios");
        printf("\n\t2.-Gestion de Peliculas");
        printf("\n\t0.-Salir");
        printf("\n\t Elija opcion: ");
        scanf("%i", &opcion);
        system("cls");


        switch(opcion)
        {
        case 1:
            gestionSocios(socios,fichNuevoSoc,fichSocios,fichImporSocios,&contadorSocios);

            break;

        case 2:
            gestionPeliculas();
            break;

        case 0:
            break;

        }
    }
    while (opcion !=0 );

    return 0;
}

void gestionSocios(tRegSocio socios[],FILE *fichNuevoSoc,FILE *fichSocios,FILE *fichImporSocios,int *contadorSocios)
{

    int opcion2;

    do
    {
        printf("\n\t\t GESTION SOCIOS");
        printf("\n\n\t1.-Alta");
        printf("\n\t2.-Baja");
        printf("\n\t3.-Modificacion");
        printf("\n\t4.-Importar socios");
        printf("\n\t5.-Listados socios");
        printf("\n\n\t0.-Volver al menu principal");
        printf("\n\t Elija opcion: ");
        fflush(stdin);
        scanf("%i", &opcion2);
        printf("prueba");

        system("cls");

        switch (opcion2)
        {
        case 1:
            altaSocio(socios,&contadorSocios,fichNuevoSoc,fichSocios);
            break;
        case 2:
            printf("baja");
            break;
        case 3:
            printf("modificacion");
            break;
        case 4:
            printf("importar socio");
            break;
        case 5:
            printf("listado socios");
            break;
        case 0:
            break;
        }
    }
    while (opcion2 !=0);
    getchar();
}

void gestionPeliculas()
{

    int opcion3;

    do
    {
        printf("\n\t\t GESTION PELICULAS");
        printf("\n\n\t1.-Importar peliculas");
        printf("\n\t2.-Mostrar datos de una pelicula");
        printf("\n\t3.-Prestamo");
        printf("\n\t4.-Devolucion");
        printf("\n\t5.-Listados Peliculas");
        printf("\n\n\t0.-Volver al menu principal");
        printf("\n\t Elija opcion: ");
        scanf("%i", &opcion3);
        system("cls");

        switch(opcion3)
        {
        case 1:
            printf("importar peli ");
            break;
        case 2:
            printf("datos peli");
            break;
        case 3:
            printf("prestamo");
            break;
        case 4:
            printf("devolucion");
            break;
        case 5:,contadorSocios
            printf("listado pelis");
            break;
        case 0:
            break;
        }
    }
    while (opcion3 !=0);
}

void  Pausa()
{

    printf("\n\n\t\t Pulse ENTER para continuar\t");
    fflush(stdin);
    getchar();
    system ("cls");
}

void altaSocio(tRegAuxSocio auxSocio[], int *contadorSocios,FILE *fichNuevoSoc,FILE *fichSocios)
{
    char dni[10];
    int validacion;
    int posicion=0;
    char aux[20];
    char confirmacion;
    int auxDia;//mem sirve para verifica que el dia introducido este dentro de los dias que tiene el mes correspondiente


    confirmacion='N';
    while((confirmacion!='S')&&(*contadorSocios <= 50))
    {
        do
        {
            system("cls");
            printf("\n\t\t Alta de usuario numero: %i", *contadorSocios);
            printf("\n\n\t Introduzca el DNI del usuario (00000000X)\t");
            fflush(stdin);
            gets(dni);

            //encontrar socios
            for(int i=0; i<; i++)
            {
                if(strcmp(dni,socios.auxSocio[i].dni)==0)
                {
                    posicion=i;
                }
            }
            if(posicion!=-1)
            {
                printf("\n\t Se ha encontrado al socio");

            }
            if(socios.contadorSocios==0)
            {
                printf("\n\t No hay ningun socio en la lista ");
                posicion=-1;

            }

            //validar dni
            for (int i=0; i<7; i++)
            {
                if ((dni[i]<48)||(dni[i]>57))
                {
                    validacion=-1;
                    break;
                }
            }
            if((dni[8]<65)||(dni[8]>90))
            {
                validacion=-1;
            }
            if(validacion==-1)
            {
                printf("\n\t Error de formato vuelve ha introducir el DNI (00000000X)");
                Pausa();
            }

        }
        while((posicion!=-1)||(validacion==-1));

        strcpy(socios.auxSocio[*contadorSocios].dni,dni);

        printf("\n\t\t Alta de usuario numero: %i",*contadorSocios);
        printf("\n\n\t Indroduzca el nombre y apellidos del nuevo socio:\t");
        fflush(stdin);
        gets(socios.auxSocio[*contadorSocios].nombre);


        printf("\n\t Indroduzca el telefono:\t");
        fflush(stdin);
        gets(socios.auxSocio[*contadorSocios].telefono);

        printf("\n\t Fecha de nacimiento");
        do
        {
            printf("\n\t Indroduzca mes de nacimieto (formato numero):\t");
            fflush(stdin);
            scanf("%i", &socios.auxSocio[*contadorSocios].nacimiento);
        }
        while((socios.auxSocio[*contadorSocioss].nacimiento.mes<1)||(socios.auxSocio[*contadorSocios].nacimiento.mes>12));

        do
        {
            printf("\n\t Indroduzca dia de nacimieto (formato numero):\t");
            fflush(stdin);
            scanf("%i",&socios.auxSocio[*contadorSocios].nacimiento.dia);

            if(socios.auxSocio[*contadorSocios].nacimiento.mes<7)
            {

                if(socios.auxSocio[*contadorSocios].nacimiento.mes % 2==0)
                {
                    auxDia=30;
                    if(socios.auxSocio[*contadorSocios].nacimiento.mes==2)
                    {
                        auxDia=28;//supongo que no hay años bisiestos
                    }

                }
                else
                {
                    auxDia=31;
                }
            }
            else
            {
                if(socios.auxSocio[*contadorSocios].nacimiento.mes % 2==0)
                {
                    auxDia=31;
                }
                else
                {
                    auxDia=30;
                }
            }

        }
        while((socios.auxSocio[*contadorSocios].nacimiento.dia<1)||(socios.auxSocio[*contadorSocios].nacimiento.dia>auxDia));

        do
        {
            printf("\n\t Indroduzca año de nacimieto (formato numero):\t");
            scanf("%i", &socios.auxSocio[*contadorSocios].nacimiento.anno);
        }
        while((socios.auxSocio[*contadorSocios].nacimiento.anno<1950)||(socios.auxSocio[*contadorSocios].nacimiento.anno>2200));

        printf("\n\n\t Direccion");

        printf("\n\t Indroduzca nombre de la calle:\t");
        fflush(stdin);
        gets(socios.auxSocio[*contadorSocios].direccion.calle);
        printf("\n\t Indroduzca nombre de la ciudad:\t");
        fflush(stdin);
        gets(socios.auxSocio[*contadorSocios].direccion.ciudad);
        printf("\n\t Indroduzca numero:\t");
        fflush(stdin);
        scanf("%i", &socios.auxSocio[*contadorSocios].direccion.numero);

        system("cls");
        posicion=*contadorSocios;
        printf("\n\t\t Alta de usuario numero: %i",posicion);

        printf("\n\t\t DATOS SOCIO");
        printf("\n\t 0- DNI : \t %s", socios.auxSocio[posicion].DNI);
        printf("\n\t 1- Nombre : \t %s", socios.auxSocio[posicion].nombre);
        printf("\n\t 2- Apellidos : \t %s", socios.auxSocio[posicion].apellidos);
        printf("\n\t 3- Telefono : \t %s" , socios.auxSocio[posicion].DNI);
        printf("\n\t 4- Fecha (DD/MM/AÑO) : \t %i/%i/%i", socios.auxSocio[posicion].nacimiento.dia,socios.auxSocio[posicion].nacimiento.mes,socios.auxSocio[posicion].nacimiento.anno);
        printf("\n\t 5- Dirección (ciudad/calle/numero): \t %s; %s; %i" , socios.auxSocio[posicion].direccion.ciudad, socios.auxSocio[posicion].direccion.calle,socios.auxSocio[posicion].direccion.numero);

        printf("\n\n\t ¿desea gardar los datos? (S/N)");
        fflush(stdin);
        scanf("%s",&confirmacion);
        confirmacion = toupper(confirmacion);

        if(confirmacion=='S')
        {
            printf("\n\n\t Los datos se han guardado");

            Pausa();
            sprintf(aux,"<%s>*<%s>*<%s>*<%s>*<%i/%i/%i>\n",socios.auxSocio[*contadorSocios].dni,socios.auxSocio[*contadorSocios].nombre,socios.auxSocio[*contadorSocios].telefono,socios.auxSocio[*contadorSocios].nacimiento,socios.auxSocio[*contadorSocios].nacimiento.mes,socios.auxSocio[*contadorSocios].nacimiento.anno);

            *contadorSocios=*contadorSocios+1;
            guardarSociosTexto(socios,fichNuevoSoc,aux);
            confirmacion='S';
        }
        else
        {
            printf("\n\n\t Proceso de alta cancelado");
            confirmacion='S';

        }


    }
}



